[project]
name = "chronotick"
version = "1.0.0"
description = "ChronoTick - High-Precision Time Synchronization with ML-Enhanced Corrections"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "ChronoTick Team" }
]
requires-python = ">=3.11,<3.13"
dependencies = [
    "torch>=2.0.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "pyyaml>=6.0",
    "loguru>=0.7.0",
    "rich>=13.0.0",
    "tqdm>=4.65.0",
    "packaging>=21.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.12.0",
    "scikit-learn>=1.3.0",
    # MCP server dependencies
    "mcp>=1.0.0",
    "anyio>=4.0.0",
    "psutil>=5.9.0",
    "ntplib>=0.4.0",
]

[project.optional-dependencies]
# Testing dependencies
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "pytest-asyncio>=0.23.0",
]

# Development dependencies
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.0.0",
]

# Core ChronoTick with ML models
chronotick = [
    "chronos-forecasting>=1.0.0",
    # TimesFM 2.5 requires GitHub version (not PyPI)
    # Install with: uv pip install git+https://github.com/google-research/timesfm.git
    "timesfm @ git+https://github.com/google-research/timesfm.git",
    "jax>=0.7.0",
    "jaxlib>=0.7.0",
]

[build-system]
requires = ["hatchling>=1.18.0"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["server/src/chronotick"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.pytest.ini_options]
testpaths = ["server/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "gpu: Tests requiring GPU",
    "network: Tests requiring network access",
    "asyncio: Async tests",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::FutureWarning",
]

[tool.black]
line-length = 100
target-version = ['py311']

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "W", "F", "I"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true

[project.scripts]
# Main MCP server (for AI agents)
chronotick-mcp = "chronotick.inference.mcp_server:cli_main"

# Standalone daemon (for multinode deployments)
chronotick-daemon = "chronotick.inference.daemon:main"

# Configuration selector tool
chronotick-config = "chronotick.inference.config_selector:main"
