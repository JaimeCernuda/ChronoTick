[project]
name = "chronotick-server"
version = "0.1.0"
description = "High-precision MCP time server for geo-distributed agent synchronization"
readme = "README.md"
authors = [
    { name = "Jaime Cernuda", email = "jcernudagarcia@hawk.iit.edu" }
]
requires-python = ">=3.12"
dependencies = [
    "mcp>=1.0.0",
    "pydantic>=2.0.0",
    "tzdata>=2024.2",
    "tzlocal>=5.3.1",
    "ntplib>=0.4.0",
    "asyncio-dgram>=2.2.0",
    "psutil>=5.9.0",
]

[project.scripts]
chronotick-server = "chronotick_server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "freezegun>=1.5.1",
    "pyright>=1.1.389",
    "pytest>=8.3.3",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.8.1",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/chronotick_server",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=80",
    "-v"
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/chronotick_server"]
omit = [
    "tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
