[project]
name = "tsfm-factory"
version = "0.1.0"
description = "Time Series Foundation Model Factory - Unified interface for state-of-the-art time series forecasting models"
readme = "LLMs.MD"
license = { text = "MIT" }
authors = [
    { name = "ChronoTick Team" }
]
requires-python = ">=3.11,<3.13"  # JAX dependency requires Python >= 3.11, limited to <3.13 for toto compatibility
dependencies = [
    "torch>=2.0.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "pyyaml>=6.0",
    "loguru>=0.7.0",
    "rich>=13.0.0",
    "tqdm>=4.65.0",
    "packaging>=21.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.12.0",
    "scikit-learn>=1.3.0",
    # MCP server dependencies
    "mcp>=1.0.0",
    "anyio>=4.0.0",
    "psutil>=5.9.0",
    # Note: transformers and model packages moved to optional dependencies
    # due to version conflicts between TTM and Toto
    "ntplib>=0.4.0",
]

[project.optional-dependencies]
# Testing dependencies
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "pytest-asyncio>=0.23.0",
]

# Development dependencies  
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.0.0",
]

# Mutually exclusive model environments
ttm = [
    "transformers==4.38.0",  # Exact version required for TTM tinytimemixer architecture
    "chronos-forecasting>=1.0.0",
    "timesfm>=1.0.0",
    # "granite-tsfm @ git+https://github.com/ibm-granite/granite-tsfm.git",  # Temporarily disabled due to version conflict
]

time-moe = [
    "transformers==4.40.1",  # Required for Time-MoE
    "chronos-forecasting>=1.0.0",
    "timesfm>=1.0.0", 
]

toto = [
    "transformers>=4.52.0",  # Required for Toto
    "chronos-forecasting>=1.0.0", 
    "timesfm>=1.0.0",
    "toto-ts>=0.1.0",
]

# Core models that work with current transformers (no conflicts)
core-models = [
    "chronos-forecasting>=1.0.0",
    "timesfm>=1.0.0",
    "jax>=0.7.0",  # Required for TimesFM covariates support
    "jaxlib>=0.7.0",  # Required for TimesFM covariates support
]

# ChronoTick inference layer integration
chronotick = [
    "chronos-forecasting>=1.0.0",
    "timesfm>=1.0.0",
    "jax>=0.7.0",  # Required for TimesFM covariates support
    "jaxlib>=0.7.0",  # Required for TimesFM covariates support
    "psutil>=5.9.0",
    "rich>=13.0.0",
    "ntplib>=0.4.0",  # For NTP validation
]

[build-system]
requires = ["hatchling>=1.18.0"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["tsfm", "chronotick_inference"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow running tests",
    "gpu: Tests requiring GPU",
    "network: Tests requiring network access",
    "asyncio: Async tests",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::FutureWarning",
]

[tool.black]
line-length = 100
target-version = ['py310']

[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E", "W", "F", "I"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true

[tool.uv]
conflicts = [
    [
        { extra = "ttm" },
        { extra = "time-moe" }, 
        { extra = "toto" },
    ],
]

[project.scripts]
# Main MCP server (for AI agents)
chronotick-mcp = "chronotick_inference.mcp_server:cli_main"

# Standalone daemon (for multinode deployments)
chronotick-daemon = "chronotick_inference.daemon:main"

# Configuration selector tool
chronotick-config = "chronotick_inference.config_selector:main"

[dependency-groups]
dev = [
    "pytest>=8.3.5",
]
