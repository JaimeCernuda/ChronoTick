clock:
  frequency_code: 9
  frequency_type: second
clock_measurement:
  ntp:
    max_acceptable_uncertainty: 0.1
    max_stratum: 16
    measurement_mode: advanced
    min_stratum: 1
    servers:
    - pool.ntp.org
    - time.nist.gov
    - time.google.com
    timeout_seconds: 2.0
  timing:
    normal_operation:
      measurement_interval: 180
    warm_up:
      duration_seconds: 60
      measurement_interval: 5
covariates:
  enabled: false
  future_variables: []
  variables:
  - cpu_usage
  - temperature
  - memory_usage
fusion:
  enabled: true
  fallback_weights:
    long_term: 0.2
    short_term: 0.8
  method: none
  uncertainty_threshold: 0.05
logging:
  level: INFO
  log_fusion_weights: true
  log_predictions: true
  log_uncertainty: true
long_term:
  context_length: 512
  device: cpu
  enabled: true
  inference_interval: 30.0
  max_uncertainty: 0.15
  model_name: timesfm
  model_params:
    backend: cpu
    context_length: 512
    model_repo: google/timesfm-2.5-200m-pytorch
    prediction_length: 60
  prediction_horizon: 60
performance:
  batch_size: 1
  cache_size: 5
  max_memory_mb: 2048
  model_timeout: 10.0
prediction_scheduling:
  cpu_model:
    max_inference_time: 2.0
    prediction_horizon: 30
    prediction_interval: 5
    prediction_lead_time: 5
  dataset:
    max_history_size: 1000
    prediction_cache_size: 100
  gpu_model:
    max_inference_time: 5.0
    prediction_horizon: 240
    prediction_interval: 30
    prediction_lead_time: 10
  ntp_correction:
    drift_uncertainty: 0.0001
    enabled: true
    method: backtracking
    offset_uncertainty: 0.001
  adaptive_capping:
    # FIX #2: Adaptive prediction magnitude capping
    # Cap predictions based on: last_ntp_magnitude + (time_since_ntp * max_drift_rate) + uncertainty_buffer
    max_drift_rate: 0.005  # 5ms/s - maximum reasonable system clock drift
    uncertainty_buffer: 0.050  # 50ms - buffer for measurement uncertainty
  confidence_capping:
    # FIX #3: Confidence-based prediction capping (maintains TimesFM spacing - always adds to dataset)
    high_confidence_threshold: 0.8  # Use prediction as-is above this
    medium_confidence_threshold: 0.5  # Medium confidence range
    medium_confidence_multiplier: 1.5  # Cap medium confidence to 1.5x last NTP magnitude
    low_confidence_multiplier: 1.2  # Cap low confidence to 1.2x last NTP magnitude
preprocessing:
  missing_value_handling:
    enabled: true
    method: interpolate
  normalization:
    enabled: false
    method: zscore
  outlier_removal:
    enabled: true
    method: iqr
    threshold: 2.0
short_term:
  context_length: 512
  device: cpu
  enabled: true
  inference_interval: 1.0
  max_uncertainty: 0.1
  model_name: timesfm
  model_params:
    backend: cpu
    context_length: 512
    model_repo: google/timesfm-2.5-200m-pytorch
    prediction_length: 30
  prediction_horizon: 30
